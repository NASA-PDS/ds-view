// Copyright 2006-2013, by the California Institute of Technology.
// ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged.
// Any commercial use must be negotiated with the Office of Technology Transfer
// at the California Institute of Technology.
//
// This software is subject to U. S. export control laws and regulations
// (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the extent that the software
// is subject to U.S. export control laws and regulations, the recipient has
// the responsibility to obtain export licenses or other export authority as
// may be required before exporting such information to foreign countries or
// providing access to foreign nationals.
//
// $Id$

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2013.01.17 at 10:47:40 PM PST
//


package gov.nasa.pds.harvest.policy;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the gov.nasa.pds.harvest.policy package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 *
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Checksums_QNAME = new QName("", "checksums");
    private final static QName _ElementName_QNAME = new QName("", "elementName");
    private final static QName _AccessUrls_QNAME = new QName("", "accessUrls");
    private final static QName _Manifest_QNAME = new QName("", "manifest");
    private final static QName _Pds3ProductMetadata_QNAME = new QName("", "pds3ProductMetadata");
    private final static QName _AncillaryMetadata_QNAME = new QName("", "ancillaryMetadata");
    private final static QName _Namespace_QNAME = new QName("", "namespace");
    private final static QName _BaseUrl_QNAME = new QName("", "baseUrl");
    private final static QName _LidContents_QNAME = new QName("", "lidContents");
    private final static QName _References_QNAME = new QName("", "references");
    private final static QName _Directories_QNAME = new QName("", "directories");
    private final static QName _AccessUrl_QNAME = new QName("", "accessUrl");
    private final static QName _Description_QNAME = new QName("", "description");
    private final static QName _File_QNAME = new QName("", "file");
    private final static QName _Name_QNAME = new QName("", "name");
    private final static QName _Value_QNAME = new QName("", "value");
    private final static QName _Path_QNAME = new QName("", "path");
    private final static QName _ModelValue_QNAME = new QName("", "modelValue");
    private final static QName _IncludePaths_QNAME = new QName("", "includePaths");
    private final static QName _Offset_QNAME = new QName("", "offset");
    private final static QName _Slot_QNAME = new QName("", "slot");
    private final static QName _ProductMetadata_QNAME = new QName("", "productMetadata");
    private final static QName _ServerUrl_QNAME = new QName("", "serverUrl");
    private final static QName _Collections_QNAME = new QName("", "collections");
    private final static QName _Candidates_QNAME = new QName("", "candidates");
    private final static QName _RegistryPackage_QNAME = new QName("", "registryPackage");
    private final static QName _Exclude_QNAME = new QName("", "exclude");
    private final static QName _FileFilter_QNAME = new QName("", "fileFilter");
    private final static QName _Include_QNAME = new QName("", "include");
    private final static QName _XPath_QNAME = new QName("", "xPath");
    private final static QName _Pds3Directory_QNAME = new QName("", "pds3Directory");
    private final static QName _ReferenceTypeMap_QNAME = new QName("", "referenceTypeMap");
    private final static QName _StorageIngestion_QNAME = new QName("", "storageIngestion");
    private final static QName _DirectoryFilter_QNAME = new QName("", "directoryFilter");
    private final static QName _StaticMetadata_QNAME = new QName("", "staticMetadata");
    private final static QName _DataTransferType_QNAME = new QName("", "dataTransferType");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: gov.nasa.pds.harvest.policy
     *
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link RegistryPackage }
     *
     */
    public RegistryPackage createRegistryPackage() {
        return new RegistryPackage();
    }

    /**
     * Create an instance of {@link Policy }
     *
     */
    public Policy createPolicy() {
        return new Policy();
    }

    /**
     * Create an instance of {@link Slot }
     *
     */
    public Slot createSlot() {
        return new Slot();
    }

    /**
     * Create an instance of {@link ReferenceTypeMap }
     *
     */
    public ReferenceTypeMap createReferenceTypeMap() {
        return new ReferenceTypeMap();
    }

    /**
     * Create an instance of {@link AccessUrls }
     *
     */
    public AccessUrls createAccessUrls() {
        return new AccessUrls();
    }

    /**
     * Create an instance of {@link Pds3Directory }
     *
     */
    public Pds3Directory createPds3Directory() {
        return new Pds3Directory();
    }

    /**
     * Create an instance of {@link AncillaryMetadata }
     *
     */
    public AncillaryMetadata createAncillaryMetadata() {
        return new AncillaryMetadata();
    }

    /**
     * Create an instance of {@link References }
     *
     */
    public References createReferences() {
        return new References();
    }

    /**
     * Create an instance of {@link Namespace }
     *
     */
    public Namespace createNamespace() {
        return new Namespace();
    }

    /**
     * Create an instance of {@link StorageIngestion }
     *
     */
    public StorageIngestion createStorageIngestion() {
        return new StorageIngestion();
    }

    /**
     * Create an instance of {@link FileFilter }
     *
     */
    public FileFilter createFileFilter() {
        return new FileFilter();
    }

    /**
     * Create an instance of {@link Directory }
     *
     */
    public Directory createDirectory() {
        return new Directory();
    }

    /**
     * Create an instance of {@link Candidate }
     *
     */
    public Candidate createCandidate() {
        return new Candidate();
    }

    /**
     * Create an instance of {@link Collection }
     *
     */
    public Collection createCollection() {
        return new Collection();
    }

    /**
     * Create an instance of {@link IncludePath }
     *
     */
    public IncludePath createIncludePath() {
        return new IncludePath();
    }

    /**
     * Create an instance of {@link DirectoryFilter }
     *
     */
    public DirectoryFilter createDirectoryFilter() {
        return new DirectoryFilter();
    }

    /**
     * Create an instance of {@link XPath }
     *
     */
    public XPath createXPath() {
        return new XPath();
    }

    /**
     * Create an instance of {@link AccessUrl }
     *
     */
    public AccessUrl createAccessUrl() {
        return new AccessUrl();
    }

    /**
     * Create an instance of {@link Checksums }
     *
     */
    public Checksums createChecksums() {
        return new Checksums();
    }

    /**
     * Create an instance of {@link Pds4ProductMetadata }
     *
     */
    public Pds4ProductMetadata createPds4ProductMetadata() {
        return new Pds4ProductMetadata();
    }

    /**
     * Create an instance of {@link StaticMetadata }
     *
     */
    public StaticMetadata createStaticMetadata() {
        return new StaticMetadata();
    }

    /**
     * Create an instance of {@link LidContents }
     *
     */
    public LidContents createLidContents() {
        return new LidContents();
    }

    /**
     * Create an instance of {@link ElementName }
     *
     */
    public ElementName createElementName() {
        return new ElementName();
    }

    /**
     * Create an instance of {@link Pds3ProductMetadata }
     *
     */
    public Pds3ProductMetadata createPds3ProductMetadata() {
        return new Pds3ProductMetadata();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Checksums }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "checksums")
    public JAXBElement<Checksums> createChecksums(Checksums value) {
        return new JAXBElement<Checksums>(_Checksums_QNAME, Checksums.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementName }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "elementName")
    public JAXBElement<ElementName> createElementName(ElementName value) {
        return new JAXBElement<ElementName>(_ElementName_QNAME, ElementName.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AccessUrls }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "accessUrls")
    public JAXBElement<AccessUrls> createAccessUrls(AccessUrls value) {
        return new JAXBElement<AccessUrls>(_AccessUrls_QNAME, AccessUrls.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "manifest")
    public JAXBElement<String> createManifest(String value) {
        return new JAXBElement<String>(_Manifest_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Pds3ProductMetadata }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "pds3ProductMetadata")
    public JAXBElement<Pds3ProductMetadata> createPds3ProductMetadata(Pds3ProductMetadata value) {
        return new JAXBElement<Pds3ProductMetadata>(_Pds3ProductMetadata_QNAME, Pds3ProductMetadata.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AncillaryMetadata }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "ancillaryMetadata")
    public JAXBElement<AncillaryMetadata> createAncillaryMetadata(AncillaryMetadata value) {
        return new JAXBElement<AncillaryMetadata>(_AncillaryMetadata_QNAME, AncillaryMetadata.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Namespace }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "namespace")
    public JAXBElement<Namespace> createNamespace(Namespace value) {
        return new JAXBElement<Namespace>(_Namespace_QNAME, Namespace.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "baseUrl")
    public JAXBElement<String> createBaseUrl(String value) {
        return new JAXBElement<String>(_BaseUrl_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LidContents }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "lidContents")
    public JAXBElement<LidContents> createLidContents(LidContents value) {
        return new JAXBElement<LidContents>(_LidContents_QNAME, LidContents.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link References }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "references")
    public JAXBElement<References> createReferences(References value) {
        return new JAXBElement<References>(_References_QNAME, References.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Directory }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "directories")
    public JAXBElement<Directory> createDirectories(Directory value) {
        return new JAXBElement<Directory>(_Directories_QNAME, Directory.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AccessUrl }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "accessUrl")
    public JAXBElement<AccessUrl> createAccessUrl(AccessUrl value) {
        return new JAXBElement<AccessUrl>(_AccessUrl_QNAME, AccessUrl.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "description")
    public JAXBElement<String> createDescription(String value) {
        return new JAXBElement<String>(_Description_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "file")
    public JAXBElement<String> createFile(String value) {
        return new JAXBElement<String>(_File_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "name")
    public JAXBElement<String> createName(String value) {
        return new JAXBElement<String>(_Name_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "value")
    public JAXBElement<String> createValue(String value) {
        return new JAXBElement<String>(_Value_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "path")
    public JAXBElement<String> createPath(String value) {
        return new JAXBElement<String>(_Path_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "modelValue")
    public JAXBElement<String> createModelValue(String value) {
        return new JAXBElement<String>(_ModelValue_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IncludePath }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "includePaths")
    public JAXBElement<IncludePath> createIncludePaths(IncludePath value) {
        return new JAXBElement<IncludePath>(_IncludePaths_QNAME, IncludePath.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "offset")
    public JAXBElement<String> createOffset(String value) {
        return new JAXBElement<String>(_Offset_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Slot }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "slot")
    public JAXBElement<Slot> createSlot(Slot value) {
        return new JAXBElement<Slot>(_Slot_QNAME, Slot.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Pds4ProductMetadata }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "productMetadata")
    public JAXBElement<Pds4ProductMetadata> createProductMetadata(Pds4ProductMetadata value) {
        return new JAXBElement<Pds4ProductMetadata>(_ProductMetadata_QNAME, Pds4ProductMetadata.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "serverUrl")
    public JAXBElement<String> createServerUrl(String value) {
        return new JAXBElement<String>(_ServerUrl_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Collection }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "collections")
    public JAXBElement<Collection> createCollections(Collection value) {
        return new JAXBElement<Collection>(_Collections_QNAME, Collection.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Candidate }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "candidates")
    public JAXBElement<Candidate> createCandidates(Candidate value) {
        return new JAXBElement<Candidate>(_Candidates_QNAME, Candidate.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RegistryPackage }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "registryPackage")
    public JAXBElement<RegistryPackage> createRegistryPackage(RegistryPackage value) {
        return new JAXBElement<RegistryPackage>(_RegistryPackage_QNAME, RegistryPackage.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "exclude")
    public JAXBElement<String> createExclude(String value) {
        return new JAXBElement<String>(_Exclude_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FileFilter }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "fileFilter")
    public JAXBElement<FileFilter> createFileFilter(FileFilter value) {
        return new JAXBElement<FileFilter>(_FileFilter_QNAME, FileFilter.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "include")
    public JAXBElement<String> createInclude(String value) {
        return new JAXBElement<String>(_Include_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XPath }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "xPath")
    public JAXBElement<XPath> createXPath(XPath value) {
        return new JAXBElement<XPath>(_XPath_QNAME, XPath.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Pds3Directory }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "pds3Directory")
    public JAXBElement<Pds3Directory> createPds3Directory(Pds3Directory value) {
        return new JAXBElement<Pds3Directory>(_Pds3Directory_QNAME, Pds3Directory.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceTypeMap }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "referenceTypeMap")
    public JAXBElement<ReferenceTypeMap> createReferenceTypeMap(ReferenceTypeMap value) {
        return new JAXBElement<ReferenceTypeMap>(_ReferenceTypeMap_QNAME, ReferenceTypeMap.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StorageIngestion }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "storageIngestion")
    public JAXBElement<StorageIngestion> createStorageIngestion(StorageIngestion value) {
        return new JAXBElement<StorageIngestion>(_StorageIngestion_QNAME, StorageIngestion.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DirectoryFilter }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "directoryFilter")
    public JAXBElement<DirectoryFilter> createDirectoryFilter(DirectoryFilter value) {
        return new JAXBElement<DirectoryFilter>(_DirectoryFilter_QNAME, DirectoryFilter.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StaticMetadata }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "staticMetadata")
    public JAXBElement<StaticMetadata> createStaticMetadata(StaticMetadata value) {
        return new JAXBElement<StaticMetadata>(_StaticMetadata_QNAME, StaticMetadata.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "dataTransferType")
    public JAXBElement<String> createDataTransferType(String value) {
        return new JAXBElement<String>(_DataTransferType_QNAME, String.class, null, value);
    }

}
