<?xml version="1.0" encoding="UTF-8"?>

<!-- 
  Copyright 2013-2015, by the California Institute of Technology.
  ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged.
  Any commercial use must be negotiated with the Office of Technology 
  Transfer at the California Institute of Technology.

  This software is subject to U. S. export control laws and regulations 
  (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the extent that the software 
  is subject to U.S. export control laws and regulations, the recipient has 
  the responsibility to obtain export licenses or other export authority as 
  may be required before exporting such information to foreign countries or 
  providing access to foreign nationals.

  $Id$
-->

<document>
  <properties>
    <title>Operation</title>
    <author email="Sean.Hardman@jpl.nasa.gov">Sean Hardman</author>
  </properties>

  <body>
    <section name="Operation">
      <p>This document describes how to operate the Transport Service software contained in the <i>${project.artifactId}</i> package. The Transport Service software is a web application for retrieving product files from a local repository either by querying a Registry Service or a Search Service for discovering a product or products. The following topics can be found in this section:
      </p>

      <ul>
        <li><a href="#Interface">Interface</a></li>
        <li><a href="#Product_Retrieval">Product Retrieval</a></li>
      </ul>
    </section>

    <section name="Interface">
      <p>The Transport Service provides a REST-based interface accessible via HTTP for interacting with the service. Because the REST-based interface operates over HTTP, there are several options for interacting with the Transport Service:
      </p>

      <ul>
        <li>Web Browser<br/>
          <p>Any standard web browser (e.g., Firefox, Safari, Chrome, Internet Explorer, etc.) will allow interaction with the service.
          </p>
        </li>
        <li>cURL<br/>
          <p>The <a href="http://curl.haxx.se/" target="_blank">cURL</a> utility offers the most flexible means for interacting with the application. The utility comes installed on most UNIX-based platforms and is available for download for the Windows platform. The examples in the sections that follow utilize <i>cURL</i> to interact with the application. If <i>cURL</i> is not installed on the local machine but <i>Wget</i> is, see the <a href="index-wget.html">Using Wget</a> section for converting <i>cURL</i> commands to <i>Wget</i> commands.
          </p>
        </li>
      </ul>

      <p>The examples below use <i>http://localhost:8080</i> as the default base end point for the service.
      </p>
    </section>

    <section name="Product Retrieval">
      <p>The Transport Service web application provides functionality for querying the Registry Service or Search Service for a product or products and retrieving the associated files. The service can be queried using 3 possible methods for encoding the HTTP request parameters: Simple HTTP syntax (name, value) pairs, DIS-Style syntax, or XML query expressions. The following table summarizes the parameters available:
      </p>

      <table>
        <tr><th>HTTP Parameter</th><th>Description</th></tr>
        <tr><td colspan="2">Simple HTTP Syntax - This is the preferred method to query the ${project.artifactId} service.</td></tr>
        <tr><td>identifier</td><td>The identifier for the product to be retrieved in the form of a PDS logical identifier (LID) or the LID and the version identifier (LIDVID). This parameter is required, unless the <i>identifier-list</i> parameter is specified, and may be specified more than once. Due to the 5000 character limit for HTTP POST commands, a safe maximum of specified identifiers is around 50.</td></tr>
        <tr><td>identifier-list</td><td>Because of the 5000 character limitation, the service also supports passing in a URL reference to a text file containing a list of LID/LIDVIDs (one per line in the file). This reference can either be local to the service (e.g., file://) or remote to the service (e.g., http://). This parameter is required, unless the <i>identifier</i> parameter is specified.</td></tr>
        <tr><td>package</td><td>The package type to be returned from the Transport Service. The valid values are <i>ZIP</i>, <i>TGZ</i> to return the compressed packages, and <i>SIZE</i> to return the total size of all files (in bytes) contained in the package once the compressed package is expanded. The values are <i>not</i> case sensitive. The default value is <i>ZIP</i>. This parameter is optional.</td></tr>
        <tr><td colspan="2">DIS-Style Syntax</td></tr>
        <tr><td>q</td><td>The DIS-Style query expression identifying the product (or set of products) to retrieve from the Transport Service. The use of the <i>q</i> parameter is preferred over the use of the <i>xmlq</i> parameter, but it is still discouraged with respect to the use of Simple HTTP Syntax. See the <a href="index-dis.html">DIS-Style Query</a> page for additional information regarding this syntax.</td></tr>
        <tr><td colspan="2">XML Query Expression</td></tr>
        <tr><td>xmlq</td><td>The XML query expression identifying the product (or set of products) to retrieve from the Transport Service. The details for the format of this query expression will not be covered here. Although supported, the use of the <i>xmlq</i> parameter is discouraged.</td></tr>
      </table>

      <subsection name="Simple HTTP Syntax">
        <p>This section details the Simple HTTP syntax for querying the Transport Service. The following is an example syntax for querying a single product:
        </p>

        <source>
% curl -X GET -o package.zip -v \
http://localhost:8080/${project.artifactId}/prod?identifier=&lt;LID|LIDVID&gt;
        </source>

        <p>Assuming the LID or LIDVID was specified correctly, the above query should return a ZIP package (the default) containing the files associated with the specified product along with a text file (md5_checksums.txt) containing an MD5 checksum for each file. The following is an example of querying for two products:
        </p>

        <source>
% curl -X GET -o package.zip -v \
http://localhost:8080/${project.artifactId}/prod?identifier=&lt;LID|LIDVID&gt;&amp;identifier=&lt;LID|LIDVID&gt;
        </source>

        <p>The above query should return a ZIP package containing the files associated with both products. The following is an example of querying for a list of products by specifying a local file containing that list:
        </p>

        <source>
% curl -X GET -o package.zip -v \
http://localhost:8080/${project.artifactId}/prod?identifier-list="file:///tmp/product-list.txt"
        </source>

        <p>The above query should return a ZIP package containing the files associated the products in the list. To specify a remote product list, place the file on an accessible web server and provide a fully qualified URL to the file (e.g., http://...). The following is an example query that will return a TAR/GZIP package:
        </p>

        <source>
% curl -X GET -o package.zip -v \
http://localhost:8080/${project.artifactId}/prod?identifier=&lt;LID|LIDVID&gt;&amp;package=TGZ
        </source>

        <p>The above query should return a TAR/GZIP package containing the files associated with the specified product. The following is an example of a request for the size of the products returned:
        </p>

        <source>
% curl -X GET -o package.zip -v \
http://localhost:8080/${project.artifactId}/prod?identifier=&lt;LID|LIDVID&gt;&amp;package=SIZE
        </source>

        <p>The above query will return an XML document containing the total size of all files (in bytes) contained in the package once the compressed package is expanded. The following is an example of the XML document:
        </p>

        <source>
&lt;dirResult&gt;
  &lt;dirEntry&gt;
    &lt;fileSize&gt;132&lt;/fileSize&gt;
  &lt;/dirEntry&gt;
&lt;/dirResult&gt;
        </source>

      </subsection>

      <subsection name="DIS-Style Syntax">
        <p>When using DIS-Style format, the <i>identifier</i>, <i>identifier-list</i> and <i>package</i> parameters must be encoded as part of the <i>q</i> value parameter. The following is an example query using DIS-Style query syntax:
        </p>

        <source>
% curl -X GET -o package.zip -v \
http://localhost:8080/${project.artifactId}/prod?q=identifier+EQ+&lt;LID|LIDVID&gt;+AND+package+EQ+TGZ
        </source>
      </subsection>
    </section>
  </body>
</document>
