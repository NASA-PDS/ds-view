#!/bin/bash

if [ "$1" == "" ] || [ "$2" == "" ]; then
	echo "Error: Invalid use."
	echo "  ./upgrade-sawmill <install-dir> <report-service-base-dir>"
	echo
	echo "Example:"
	echo " ./upgrade-sawmill $HOME/sawmill /pds4/report-service"
	exit 0
fi

INSTALL_DIR=$1
SAWMILL_DEV_HOME=$2/pdsdev/sawmill
SAWMILL_OPS_HOME=$2/pdsops/sawmill
date=`date -I`


echo 
echo "Upgrading DEV..."
echo "mv $SAWMILL_DEV_HOME ${SAWMILL_DEV_HOME}_$date"
if [ -d "$INSTALL_DIR" ] && [ -d "$SAWMILL_DEV_HOME" ]; then
#    mv $SAWMILL_DEV_HOME ${SAWMILL_DEV_HOME}_$date
#    cp -r $INSTALL_DIR $SAWMILL_DEV_HOME
    cd $SAWMILL_DEV_HOME/Extras
    echo "./update.pl ${SAWMILL_DEV_HOME}_$date/LogAnalysisInfo $SAWMILL_DEV_HOME/LogAnalysisInfo"
#    ./update.pl ${SAWMILL_DEV_HOME}_$date/LogAnalysisInfo $SAWMILL_DEV_HOME/LogAnalysisInfo
else
    echo "Error: Directories do not exist."
    exit 0
fi

echo

echo 
echo "Upgrading OPS..."
echo "mv $SAWMILL_OPS_HOME ${SAWMILL_OPS_HOME}_$date"
if [ -d "$INSTALL_DIR" ] && [ -d "$SAWMILL_OPS_HOME" ]; then
#    mv $SAWMILL_OPS_HOME ${SAWMILL_OPS_HOME}_$date
#    cp -r $INSTALL_DIR $SAWMILL_OPS_HOME
    cd $SAWMILL_OPS_HOME/Extras
    echo "./update.pl ${SAWMILL_OPS_HOME}_$date/LogAnalysisInfo $SAWMILL_OPS_HOME/LogAnalysisInfo"
#    ./update.pl ${SAWMILL_OPS_HOME}_$date/LogAnalysisInfo $SAWMILL_OPS_HOME/LogAnalysisInfo
else
    echo "Error: Directories do not exist."
    exit 0
fi

echo


## This section is only necessary if we need to have 2 seperate license.cfg
## I think we can put both licenses in the same .cfg that will suffice.

#OPS1_HOME=$2/pdsops/ops1
#OPS2_HOME=$2/pdsops/ops2
#LOGINFO_SFX=sawmill/LogAnalysisInfo

# Move old sawmill instances to temp dir for now
#echo "mv $OPS1_HOME/sawmill $OPS1_HOME/sawmill_$date"
#mv $OPS1_HOME/sawmill $OPS1_HOME/sawmill_old

#echo "mv $OPS2_HOME/sawmill $OPS2_HOME/sawmill_$date"
#mv $OPS2_HOME/sawmill $OPS2_HOME/sawmill_old

# Recreate directory structure
#echo "mkdir -p $OPS1_HOME/$LOGINFO_SFX"
#mkdir -p $OPS1_HOME/$LOGINFO_SFX

#echo "mkdir -p $OPS2_HOME/$LOGINFO_SFX"
#mkdir -p $OPS2_HOME/$LOGINFO_SFX

# Create symbolic links
#for file in `find $SAWMILL_OPS_HOME/LogAnalysisInfo -mindepth 1 -maxdepth 1`; do
#    filename=`echo $base | gawk -F/ '{print $NF}'`

#    echo "ln -s $file $OPS1_HOME/$LOGINFO_SFX/$filename"
    #ln -s $file $OPS1_HOME/$LOGINFO_SFX/$filename

#    echo "ln -s $file $OPS2_HOME/$LOGINFO_SFX/$filename"
    #ln -s $file $OPS2_HOME/$LOGINFO_SFX/$filename
#done


exit 0
	