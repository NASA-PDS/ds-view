// Copyright 2006-2010, by the California Institute of Technology.
// ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged.
// Any commercial use must be negotiated with the Office of Technology Transfer
// at the California Institute of Technology.
//
// This software is subject to U. S. export control laws and regulations
// (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the extent that the software
// is subject to U.S. export control laws and regulations, the recipient has
// the responsibility to obtain export licenses or other export authority as
// may be required before exporting such information to foreign countries or
// providing access to foreign nationals.
//
// $Id$

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.06.10 at 03:32:05 PM PDT 
//


package gov.nasa.pds.harvest.policy;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the gov.nasa.pds.harvest.policy package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _XPath_QNAME = new QName("", "xPath");
    private final static QName _FilePattern_QNAME = new QName("", "filePattern");
    private final static QName _Location_QNAME = new QName("", "location");
    private final static QName _InventoryFiles_QNAME = new QName("", "inventoryFiles");
    private final static QName _RootDirectories_QNAME = new QName("", "rootDirectories");
    private final static QName _Policy_QNAME = new QName("", "policy");
    private final static QName _CandidateProduct_QNAME = new QName("", "candidateProduct");
    private final static QName _Metadata_QNAME = new QName("", "metadata");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: gov.nasa.pds.harvest.policy
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Metadata }
     * 
     */
    public Metadata createMetadata() {
        return new Metadata();
    }

    /**
     * Create an instance of {@link Policy }
     * 
     */
    public Policy createPolicy() {
        return new Policy();
    }

    /**
     * Create an instance of {@link InventoryFile }
     * 
     */
    public InventoryFile createInventoryFile() {
        return new InventoryFile();
    }

    /**
     * Create an instance of {@link RootDirectory }
     * 
     */
    public RootDirectory createRootDirectory() {
        return new RootDirectory();
    }

    /**
     * Create an instance of {@link CandidateProduct }
     * 
     */
    public CandidateProduct createCandidateProduct() {
        return new CandidateProduct();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "xPath")
    public JAXBElement<String> createXPath(String value) {
        return new JAXBElement<String>(_XPath_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "filePattern")
    public JAXBElement<String> createFilePattern(String value) {
        return new JAXBElement<String>(_FilePattern_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "location")
    public JAXBElement<String> createLocation(String value) {
        return new JAXBElement<String>(_Location_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InventoryFile }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "inventoryFiles")
    public JAXBElement<InventoryFile> createInventoryFiles(InventoryFile value) {
        return new JAXBElement<InventoryFile>(_InventoryFiles_QNAME, InventoryFile.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RootDirectory }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "rootDirectories")
    public JAXBElement<RootDirectory> createRootDirectories(RootDirectory value) {
        return new JAXBElement<RootDirectory>(_RootDirectories_QNAME, RootDirectory.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Policy }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "policy")
    public JAXBElement<Policy> createPolicy(Policy value) {
        return new JAXBElement<Policy>(_Policy_QNAME, Policy.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CandidateProduct }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "candidateProduct")
    public JAXBElement<CandidateProduct> createCandidateProduct(CandidateProduct value) {
        return new JAXBElement<CandidateProduct>(_CandidateProduct_QNAME, CandidateProduct.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Metadata }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "metadata")
    public JAXBElement<Metadata> createMetadata(Metadata value) {
        return new JAXBElement<Metadata>(_Metadata_QNAME, Metadata.class, null, value);
    }

}
