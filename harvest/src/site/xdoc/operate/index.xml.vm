<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2010, by the California Institute of Technology.
  ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged.
  Any commercial use must be negotiated with the Office of Technology Transfer
  at the California Institute of Technology.

  This software is subject to U. S. export control laws and regulations
  (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the extent that the software
  is subject to U.S. export control laws and regulations, the recipient has
  the responsibility to obtain export licenses or other export authority as
  may be required before exporting such information to foreign countries or
  providing access to foreign nationals.

  $Id$
-->

<document>
  <properties>
    <title>Operation</title>
    <author email="Michael.Cayanan@jpl.nasa.gov">Michael Cayanan</author>
    <author email="Sean.Hardman@jpl.nasa.gov">Sean Hardman</author>
  </properties>

  <body>
    <section name="Operation">
      <p>The following topics can be found in this section:
      </p>

      <ul>
        <li><a href="#Tool_Setup">Tool Setup</a></li>
        <li><a href="#Additional_Tool_Setup">Additional Tool Setup</a></li>
        <li><a href="#Tool_Execution">Tool Execution</a></li>
        <li><a href="#Report_Format">Report Format</a></li>
      </ul>
    
      <p>Note: The command-line examples in this section have been broken into multiple lines for readability. The commands should be reassembled into a single line prior to execution.
      </p>
    </section>

    <section name="Tool Setup">
      <p>In order to execute Harvest Tool, the user's environment must first be configured appropriately. This section describes how to setup the user environment on UNIX-based and Windows machines.
      </p>

      <subsection name="UNIX-Based Setup">
        <p>This section details the environment setup for UNIX-based machines. The preferred method is to specify the shell script, <i>Harvest</i>, on the command-line. Setting the <i>PATH</i> environment variable to the location of the script, enables the shell script to be executed from any location on the user's machine.
        </p>
        
        <p>The following command demonstrates how to set the <i>PATH</i> environment variable, by appending to its current setting: 
        </p>
        
        <source>
% setenv PATH ${PATH}:$HOME/${xdoc-artifactId}-${xdoc-version}/bin
        </source>        
        
        <p>The tool can now be executed via the shell script as demonstrated in the following example:
        </p>
        
        <source>
% Harvest &lt;policy file&gt; &lt;command-line arguments&gt;
        </source>

        <p>Additional methods for setting up a UNIX-based environment can be found in the <a href="index-unix.html">UNIX Setup Options</a> section. If viewing this document in PDF form, see the appendix for details.
        </p>
      </subsection>

      <subsection name="Windows Setup">
        <p>This section details the environment setup for Windows machines. The preferred method is to specify the batch file, <i>Harvest.bat</i>, on the command-line. Setting the <i>PATH</i> environment variable to the location of the file, enables the batch file to be executed from any location on the user's machine.
        </p>
        
        <p>The following command demonstrates how to set the <i>PATH</i> environment variable, by appending to its current setting:
        </p>
        
        <source>
C:\&gt; set PATH = %PATH%;C:\\${xdoc-artifactId}-${xdoc-version}\bin
        </source>       
        
        <p>The tool can now be executed via the batch file as demonstrated in the following example:
        </p>
        
        <source>
C:\&gt; Harvest &lt;policy file&gt; &lt;command-line arguments&gt;
        </source>

        <p>Additional methods for setting up a Windows environment can be found in the <a href="index-win.html">Windows Setup Options</a> section. If viewing this document in PDF form, see the appendix for details.
        </p>
      </subsection>
    </section>

    <section name="Additional Tool Setup">
      <p>This section details how to re-configure the Harvest Tool to interface with another instance of the PDS Registry Service. This would be in cases where a user wants to test the registration of data products on a local instance of the Registry first before registering the products on the operational release of the PDS Registry. Users that wish to not do this can skip this section.
      </p>
      
      <p>The Harvest Tool points to the PDS Registry and Security Service through the following Java System Properties:
      </p>
      
      <table>
        <tr><th>System Property Name</th><th>Description</th></tr>
        <tr><td>pds.registry</td><td>Specify the URL to the PDS Registry Service. This property is required.</td></tr>
        <tr><td>pds.security</td><td>Speicfy the URL to the PDS Security Service. If the PDS Registry being pointed to is not secured (i.e. a local instance), then this property can be omitted.</td></tr>
      </table>
      
      <p>By default, the Harvest shell script and batch file point to the operational releases of the PDS Registry and Security Services. The sections below detail how to modify these scripts to point to another instance of these services.
      </p>
      
      <subsection name="UNIX-Based Users">
        <p>Open the <i>Harvest</i> shell script and go to the last line in the file. It should look like the following:       
        </p>
        
        <source>
          java -Dpds.registry="http://pdsops2.jpl.nasa.gov/registry-service" \
          -Dpds.security="http://pdsops.jpl.nasa.gov/openam/identity" \
          -jar ${HARVEST_JAR} "$@"
        </source>
        
        <p>Replace the URL values of <i>pds.registry</i> and/or <i>pds.security</i> with URLs to the desired instance of the PDS Registry and/or Security. For example, making the following change to the script will have Harvest pointing to a non-secured, local instance of the PDS Registry on port 8080:
        </p>
        
        <source>
          java -Dpds.registry="http://localhost:8080/registry-service" -jar ${HARVEST_JAR} "$@"          
        </source>      
      </subsection>
      
      <subsection name="Windows-Based Users">
        <p>Open the <i>Harvest</i> batch and go to the last line in the file. It should look like the following:       
        </p>
        
        <source>
          java -Dpds.registry="http://pdsops2.jpl.nasa.gov/registry-service" \
          -Dpds.security="http://pdsops.jpl.nasa.gov/openam/identity" \
          -jar "%HARVEST_JAR%" %*
        </source>
        
        <p>Replace the URL values of <i>pds.registry</i> and/or <i>pds.security</i> with URLs to the desired instance of the PDS Registry and/or Security. For example, making the following change to the batch file will have Harvest pointing to a non-secured, local instance of the PDS Registry on port 8080:
        </p>
        
        <source>
          java -Dpds.registry="http://localhost:8080/registry-service" -jar "%HARVEST_JAR%" %*          
        </source>      
      </subsection>        
    </section>

    <section name="Tool Execution">
      <p>Harvest Tool can be executed in various ways. This section describes how to run the tool, as well as its behaviors and caveats.
      </p>
      
      <subsection name="Command-Line Options">
        <p>The following table describes the command-line options available:
        </p>

        <table>
          <tr><th>Command-Line Option</th><th>Description</th></tr>
          <tr><td>-u, --username</td><td>Specify a username for authentication with the PDS Security Service.</td></tr>
          <tr><td>-p, --password</td><td>Specify a password associated with the username.</td></tr>
          <tr><td>-l, --log-file</td><td>Specify a log file name. Default is standard out.</td></tr>
          <tr><td>-V, --version</td><td>Display the release number and copyright information.</td></tr>
          <tr><td>-h, --help</td><td>Display Harvest usage.</td></tr>
        </table>
      </subsection>

      <subsection name="Execute Harvest Tool">
        <p>This section demonstrates execution of the tool using the command-line options. The examples below execute the tool via the batch/shell script. Alternate methods for executing the tool can be found in the <a href="#Tool_Setup">Tool Setup</a> section.
        </p>
        
        <p>The Harvest Tool operates with a policy file to register product metadata. Details on how to create this policy file can be found in the <a href="#Harvest Policy File">Harvest Policy File</a> section.
        </p>

        <p>The following command demonstrates how to run the Harvest Tool against a policy file, <i>policy.xml</i>, using a valid username, <i>pds</i>, and password, <i>mypwd</i>, with the output going to standard out:
        </p>
        
        <source>
% Harvest policy.xml -u pds -p mypwd
        </source>
        
        <p>The following command demonstrates how to run the Harvest Tool with the output going to a log file, <i>log.txt</i> instead of standard out:
        </p>
        
        <source>
% Harvest policy.xml -u pds -p mypwd -l log.txt
        </source>   
      </subsection>

      <subsection name="Harvest Policy File">
        <p>The Harvest policy file is an XML file that the tool uses to find products and register its metadata. The schema for the policy file can be found in the <a href="index-policy-schema.html">Harvest Policy Schema</a> section. If viewing this document in PDF form, see the appendix for details.
        </p>
        
        <p>The following is an example of a policy file:
        </p>
        
        <source>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;policy&gt;
   &lt;rootDirectories&gt;
      &lt;location&gt;C:\pds4\context_target\product_files&lt;/location&gt;
      &lt;filePattern&gt;*.xml&lt;/filePattern&gt;
   &lt;/rootDirectories&gt;
   &lt;inventoryFiles&gt;
      &lt;location&gt;C:\pds4\insthost\collection_instrument_host.xml&lt;/location&gt;
   &lt;/inventoryFiles&gt;
   &lt;candidateProduct objectType="Product_Instrument_Host"&gt;
      &lt;metadata&gt;
         &lt;xPath&gt;//alternate_title&lt;/xPath&gt;
         &lt;xPath&gt;//last_modification_date_time&lt;/xPath&gt;
         &lt;xPath&gt;//Subject_Area/instrument_host_name&lt;/xPath&gt;
      &lt;/metadata&gt;
   &lt;/candidateProduct&gt;
   &lt;candidateProduct objectType="Product_Target"&gt;
      &lt;metadata&gt;
         &lt;xPath&gt;//alternate_title&lt;/xPath&gt;
         &lt;xPath&gt;//last_modification_date_time&lt;/xPath&gt;
         &lt;xPath&gt;//identifier&lt;/xPath&gt;
         &lt;xPath&gt;//Subject_Area/target_name&lt;/xPath&gt;
      &lt;/metadata&gt;
   &lt;/candidateProduct&gt;
&lt;/policy&gt;
        </source>
        
        <p>The policy file is made up of 4 complex type elements: <i>rootDirectories</i>, <i>inventoryFiles</i>, <i>candidateProduct</i>, <i>metadata</i>.
        </p>
        
        <b><i>rootDirectories</i></b>
        
        <p>Specify this element to tell the Harvest Tool where to crawl for data products. The following table describes the elements that are allowed:
        </p>
        
        <table>
          <tr><th>Element Name</th><th>Description</th></tr>
          <tr><td>location</td><td>Specify a directory path.</td></tr>
          <tr><td>filePattern</td><td>Specify a file pattern to look for specific files. If omitted, the default is to get all files within a directory.</td></tr>
        </table>
        
        <b><i>inventoryFiles</i></b>
        
        <p>Specify this element to tell the Harvest Tool to crawl a PDS Inventory File. The following table describes the elements that are allowed:
        </p>
        
        <table>
          <tr><th>Element Name</th><th>Description</th></tr>
          <tr><td>location</td><td>Specify a location to the PDS inventory file.</td></tr>
        </table>
        
        <b><i>candidateProduct</i></b>
        
        <p>Specify this element to tell the Harvest Tool what product types to register and what metadata to extract from a data product. It requires an attribute called <i>objectType</i> that tells the Harvest Tool what product types to register. The only element allowed is the <i>metadata</i> complex type element, which is described below.
        </p>
        
        <b><i>metadata</i></b>
        
        <p>Specify this element to tell the Harvest Tool what metadata to register. The following table describes the elements that are allowed:
        </p>
        
        <table>
          <tr><th>Element Name</th><th>Description</th></tr>
          <tr><td>xPath</td><td>Specify an XPath expression to extract metadata.</td></tr>
        </table>
        
        <p>XPath is a query language that uses path expressions to select nodes in an XML document. These path expressions look very much like expressions in a traditional computer file system. In its simplest form, prepending a <i>//</i> before a name will find the element no matter where it is in the XML file.
        </p>
        
        <p>The following XPath expression will find the <i>last_modification_date_time</i> element no matter where it is in the file:
        </p>
        
        <source>
//last_modification_date_time
        </source>
        
        <p>The following XPath expression will find all <i>target_name</i> elements that are children of <i>Subject_Area</i>:
        </p>
        
        <source>
//Subject_Area/target_name       
        </source>     
      </subsection>
 
    </section>

    <section name="Report Format">
      <p>This section describes the contents of the Harvest Tool report. At this time, the Harvest Tool only outputs a series of log messages. The log will report the success or failure of a discovered product attempting to be registered. Additionally, any syntactical errors in a discovered product are reported. A log consists of a severity level, file name, and a message. The following is an example of some of the log messages that can be expected from the Harvest Tool:
      </p>
      
      <source>
INFO:   [C:\pds4\context_insthost\aaaProduct_files_20100714a\host_24COL.xml] Succesfully registered product: \
http://pdsops2.jpl.nasa.gov/registry-service/registry/products/URN:NASA:PDS:instrument_host.24COL/v1.0
INFO:   [C:\pds4\context_insthost\aaaProduct_files_20100714a\host_24COL.xml] Successfully registered association: \
http://pdsops2.jpl.nasa.gov/registry-service/registry/associations/urn:uuid:93b8209a-0710-4cf5-b310-7ed181d67841
INFO:   [C:\pds4\context_insthost\aaaProduct_files_20100714a\host_24COL.xml] Successfully registered association: \
http://pdsops2.jpl.nasa.gov/registry-service/registry/associations/urn:uuid:78acc8bc-3f3a-4da2-a13c-f1ee368906a3
INFO:   [C:\pds4\context_insthost\aaaProduct_files_20100714a\host_24COL.xml] Successfully registered association: \
http://pdsops2.jpl.nasa.gov/registry-service/registry/associations/urn:uuid:b818b505-06a6-4508-bdc1-9d2f63a5344e
INFO:   [C:\pds4\context_insthost\aaaProduct_files_20100714a\host_24COL.xml] Successfully registered association: \
http://pdsops2.jpl.nasa.gov/registry-service/registry/associations/urn:uuid:ec4fd498-e0d1-4257-8565-506c167119b3
WARNING:   [C:\pds4\phoenix_data\pds4_phxase_0002\DATA\PHXCOMPACT.xml] \
Product already exists in the registry: URN:NASA:PDS:PHX-ASE:DATA-REDUCED::V1.0
WARNING:   [C:\pds4\phoenix_data\pds4_phxase_0002\DATA\PHXPROFILES.xml] \
Product already exists in the registry: URN:NASA:PDS:PHX-ASE:DATA-REDUCED::V1.0
WARNING:   [C:\pds4\phoenix_data\pds4_phxase_0001\DATA\IMU_A_EDR_M.xml] \
Product already exists in the registry: URN:NASA:PDS:PHX-ASE:DATA-RAW::V1.0
SEVERE:   [C:\pds4\context_target\aaaProduct_files_20100722t\target_IO_PLASMA_TORUS.xml] \
line 262: The reference to entity "TRAUGE1995" must end with the ';' delimiter.
      </source>
    </section>
  </body>
</document>
