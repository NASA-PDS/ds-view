<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2017 by the California Institute of Technology.
  ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged.
  Any commercial use must be negotiated with the Office of Technology Transfer
  at the California Institute of Technology.

  This software is subject to U. S. export control laws and regulations
  (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the extent that the software
  is subject to U.S. export control laws and regulations, the recipient has
  the responsibility to obtain export licenses or other export authority as
  may be required before exporting such information to foreign countries or
  providing access to foreign nationals.

  $Id$
-->

<document>
  <properties>
    <title>Installation</title>
    <author email="Sean.Hardman@jpl.nasa.gov">Sean Hardman</author>
    <author email="James.E.Hofman@jpl.nasa.gov">Jim Hofman</author>
  </properties>

  <body>
    <section name="Installation">
      <p>This document describes how to install the Inspect Tool contained in the <i>${project.artifactId}</i> package. The following topics can be found in this document:
      </p>

      <ul>
        <li><a href="#System_Requirements">System Requirements</a></li>
        <li><a href="#Unpacking_the_Package">Unpacking the Package</a></li>
        <li><a href="#Configuring_the_Environment">Configuring the Environment</a></li>
      </ul>
    </section>

    <section name="System Requirements">
      <p>This section details the system requirements for installing and operating the Inspect Tool software.
      </p>

      <subsection name="Python">
        <p>The Inspect Tool software was developed using Python and will run on any platform with a supported Python environment. It is compatible with Python 2.6 or 2.7 (Python above 2.7.8 is recommended).  It is not compatible with Python 2.5 or earlier versions; or currently with Python 3.  The following commands test the local Python installation in a UNIX-based environment:
        </p>

        <source>
% which python
/usr/bin/python

% python --version
Python 2.7.12
        </source>

        <p>The first command above checks whether the <i>python</i> executable is in the environment's path and the second command reports the version. If Python is not installed or the version is not 2.7 (python versions above 2.7.8 are recommended for easier installation of the Inspect Tool), Python will need to be downloaded and installed in the current environment. Consult the local system administrator for installation of this software on networked machines.  Most systems should have both Python 2.7 and Python 3 installed.  On local machines, current versions of <i>python</i> can be downloaded from <a href="https://www.python.org/downloads/">Python download page</a>
        </p>
      </subsection>

      <subsection name="Python Dependencies">
        <p>The Inspect Tool software has dependencies on a number of Python libraries.  In the future the code will be make into a standalone executable.  However for now, the following modules must be installed in order to run the Inspect Tool:
        </p>

        <ul>
          <li>pds4_tools</li>
             <p>Module and installation instruction found at <a href="http://sbndev.astro.umd.edu/wiki/Python_PDS4_Tools">Python PDS4 Tools</a></p>   
          <li>PyQt4 and SIP (C++ to Python wrapper code (i.e. Qt to PyQt))</li>
             <p>This is the most difficult installation; installation information is found at: <a href="http://pyqt.sourceforge.net/Docs/PyQt4/installation.html">PyQt4 and SIP instructions.</a> If you get stuck feel free to send an email to <a href="mailto:james.e.hofman@jpl.nasa.gov">Installation Help</a>.</p>
          <li>Matplotlib</li>
          <li>Numpy - required by Matplotlib</li>
          <li>python-dateutil - required by Matplotlib</li>
          <li>pytz - required by Matplotlib</li>
          <li>cycler - required by Matplotlib</li>
          <li>pyparsing - required by Matplotlib </li>   
                           
        </ul>
        <p><i>pip</i> is a package management system used to install and manage python software packages.  It is included in python versions 2.7.9 onward.  It is very easy to use: <a href="http://www.pythonforbeginners.com/pip/">How to use pip</a>.  It can be used install all of the packages listed above with the exception of PyQt4 and SIP.  If you are not sure if you have pip installed on your machine do the following:        
        </p>
        <source>
% which pip  (from Mac or linux)  
% where pip  (Windows in a command prompt window)
or
% python
>>> import pip  (Note: The import command can be used to test for installation of the other packages listed above.)      
        </source>
      </subsection>
    </section>

    <section name="Unpacking the Package">
      <p>Download the <i>${project.artifactId}</i> package from the PDS <a href="ftp://pds.nasa.gov/pub/toplevel/2010/preparation/" target="_blank">FTP</a> site. The distribution is available in identical zip or tar/gzip packages. The installation directory may vary from environment to environment but in UNIX-based environments it is typical to install software packages in the <i>/usr/local</i> directory and in Windows-based environments it is typical to install software packages in the <i>C:\Program Files</i> directory. Unpack the selected binary distribution file in the installation directory for the local environment with one of the following commands:
      </p>
      <source>

% unzip ${project.artifactId}-${project.version}-bin.zip
or
% tar -xzvf ${project.artifactId}-${project.version}-bin.tar.gz
      </source>

      <p>Note: Depending on the platform, the native version of <i>tar</i> may produce an error when attempting to unpack the distribution file because many of the file paths are greater than 100 characters. If available, the GNU version of tar will resolve this problem. If that is not available or cannot be installed, the zipped package will work just fine in a UNIX environment.
      </p>

      <p>The commands above result in the creation of the <i>${project.artifactId}-${project.version}</i> directory with the following directory structure:
      </p>

      <ul>
        <li><b>README.txt</b><br/>
          <p>A README file directing the user to the available documentation for the project.
          </p>
        </li>
        <li><b>LICENSE.txt</b><br/>
          <p>The copyright notice from the <a href="http://www.caltech.edu/" target="_blank">California Institute of Technology</a> detailing the restrictions regarding the use and distribution of this software. Although the license is strictly worded, the software has been classified as Technology and Software Publicly Available (TSPA) and is available for <i>anyone</i> to download and use.
          </p>
        </li>
        <li><b>bin/</b><br/>
          <p>This directory contains Python scripts for launching and interacting with the software for UNIX-based and Windows environments.
          </p>
        </li>
        <li><b>doc/</b><br/>
          <p>This directory contains a local web site with the Inspect Tool documentation and other configuration management related information. Just point the desired web browser to the <i>index.html</i> file in this directory.
          </p>
        </li>
      </ul>
    </section>

    <section name="Configuring the Environment">
      <p>In order to manage and interact with the program-name, the local environment must first be configured appropriately. This section describes how to setup the user environment on UNIX-based and Windows machines.
      </p>

      <subsection name="UNIX-Based Environment">
        <p>This section details the environment setup for UNIX-based machines. The binary distribution includes a few shell scripts that must be executed from the command-line. Setting the <i>PATH</i> environment variable to the location of the scripts, enables the shell scripts to be executed from any location on the local machine.
        </p>

        <p>The following command demonstrates how to set the <i>PATH</i> environment variable (in Bourne shell), by appending to its current setting:
        </p>

        <source>
% export PATH=${PATH}:/usr/local/${project.artifactId}-${project.version}/bin
        </source>
      </subsection>
      
      <subsection name="Windows Environment">
        <p>This section details the environment setup for Windows machines. The binary distribution includes a few batch scripts that must be executed from the command-line. Setting the <i>PATH</i> environment variable to the location of the files, enables the batch scripts to be executed from any location on the local machine.
        </p>

        <p>The following command demonstrates how to set the <i>PATH</i> environment variable, by appending to its current setting:
        </p>

        <source>
C:\&gt; set PATH = %PATH%;C:\Program Files\\${project.artifactId}-${project.version}\bin
        </source>

        <p>Additional methods for setting Windows environment variables can be found in the <a href="index-win.html">Windows System Properties</a> document.
        </p>
      </subsection>
    </section>
  </body>
</document>
