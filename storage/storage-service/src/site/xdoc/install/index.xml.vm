<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2011-2013, by the California Institute of Technology.
  ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged.
  Any commercial use must be negotiated with the Office of Technology Transfer
  at the California Institute of Technology.

  This software is subject to U. S. export control laws and regulations
  (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the extent that the software
  is subject to U.S. export control laws and regulations, the recipient has
  the responsibility to obtain export licenses or other export authority as
  may be required before exporting such information to foreign countries or
  providing access to foreign nationals.

  $Id$
-->

<document>
  <properties>
    <title>Installation</title>
    <author email="Sean.Hardman@jpl.nasa.gov">Sean Hardman</author>
  </properties>

  <body>
    <section name="Installation">
      <p>This document describes how to install the Storage Service contained in the <i>${project.artifactId}</i> package. The following topics can be found in this document:
      </p>

      <ul>
        <li><a href="#System_Requirements">System Requirements</a></li>
        <li><a href="#Unpacking_the_Package">Unpacking the Package</a></li>
        <li><a href="#Configuring_the_Service">Configuring the Service</a></li>
        <li><a href="#Configuring_the_Environment">Configuring the Environment</a></li>
      </ul>
    </section>

    <section name="System Requirements">
      <p>The Storage Service was developed using Java and will run on any platform with a supported Java Runtime Environment (JRE). The software was specifically developed under Java version 1.6 and has only been tested with this version. The following commands test the local Java installation in a UNIX-based environment:
      </p>

      <source>
% which java
/usr/bin/java

% java -version
java version "1.6.0_26"
Java(TM) SE Runtime Environment (build 1.6.0_26-b03-384-10M3425)
Java HotSpot(TM) 64-Bit Server VM (build 20.1-b02-384, mixed mode)
      </source>

      <p>The first command above checks whether the <i>java</i> executable is in the environment's path and the second command reports the version. If Java is not installed or the version is not at least 1.6, Java will need to be downloaded and installed in the current environment. Consult the local system administrator for installation of this software. For the do-it-yourself crowd, the Java software can be downloaded from the <a href="http://www.oracle.com/technetwork/java/javase/downloads/" target="_blank">Oracle Java Download</a> page. The software package of choice is the Java Standard Edition (SE) 6, either the JDK or the JRE package. The JDK package is not necessary to run the software but could be useful if development and compilation of Java software will also occur in the current environment.
      </p>
    </section>

    <section name="Unpacking the Package">
      <p>Download the <i>${project.artifactId}</i> package from the PDS <a href="ftp://pds.nasa.gov/pub/toplevel/2010/storage/" target="_blank">FTP</a> site. The binary distribution is available in identical zip or tar/gzip packages. The installation directory may vary from environment to environment but in UNIX-based environments it is typical to install software packages in the <i>/usr/local</i> directory and in Windows-based environments it is typical to install software packages in the <i>C:\Program Files</i> directory. Unpack the selected binary distribution file in the installation directory for the local environment with one of the following commands:
      </p>

      <source>
% unzip ${project.artifactId}-${project.version}-bin.zip
or
% tar -xzvf ${project.artifactId}-${project.version}-bin.tar.gz
      </source>

      <p>Note: Depending on the platform, the native version of <i>tar</i> may produce an error when attempting to unpack the distribution file because many of the file paths are greater than 100 characters. If available, the GNU version of tar will resolve this problem. If that is not available or cannot be installed, the zipped package will work just fine in a UNIX environment.
      </p>

      <p>The commands above result in the creation of the <i>${project.artifactId}-${project.version}</i> directory with the following directory structure:
      </p>

      <ul>
        <li><b>README.txt</b><br/>
          <p>A README file directing the user to the available documentation for the project.
          </p>
        </li>
        <li><b>LICENSE.txt</b><br/>
          <p>The copyright notice from the <a href="http://www.caltech.edu/" target="_blank">California Institute of Technology</a> detailing the restrictions regarding the use and distribution of this software. Although the license is strictly worded, the software has been classified as Technology and Software Publicly Available (TSPA) and is available for <i>anyone</i> to download and use.
          </p>
        </li>
        <li><b>bin/</b><br/>
          <p>This directory contains shell and batch scripts for launching and interacting with the service for UNIX-based and Windows environments.
          </p>
        </li>
        <li><b>doc/</b><br/>
          <p>This directory contains a local web site with the Storage Service documentation and other configuration management related information. Just point the desired web browser to the <i>index.html</i> file in this directory.
          </p>
        </li>
        <li><b>etc/</b><br/>
          <p>This directory contains configuration files for specifying the functionality of the service.
          </p>
        </li>
        <li><b>lib/</b><br/>
          <p>This directory contains the dependent jar files for the service.
          </p>
        </li>
        <li><b>policy/</b><br/>
          <p>This directory contains policy files for specifying the content supported by the service.
          </p>
        </li>
        <li><b>test/</b><br/>
          <p>This directory contains a test product.
          </p>
        </li>
      </ul>
    </section>

    <section name="Configuring the Service">
      <p>This section details the configuration of the service port, product policy, log file location and installation location.
      </p>

      <subsection name="Service Port">
        <p>By default, the Storage Service comes configured to run on port <i>9000</i> on the local machine. In order to change the port number, each of the scripts in the <i>bin</i> directory must be modified. In the <i>storage-service</i> script, modify the following line (replacing <i>9000</i>) to specify the desired port:
        </p>

        <source>
SERVER_PORT=9000
        </source>

        <p>In the <i>storage-client</i>, <i>storage-delete</i> and <i>storage-query</i> scripts, modify the following line (replacing <i>9000</i>) to specify the desired port:
        </p>

        <source>
FILEMGR_URL=http://localhost:9000
        </source>

        <p>If the client and query scripts will be executed from a machine other than the machine where the service is running, the <i>localhost</i> portion of the line above should be replaced with the actual machine name (i.e., host.jpl.nasa.gov). The examples above detail lines from the UNIX-based shell scripts. The lines in the Windows-based batch scripts are identical except that they are prefixed with "set ".
        </p>
      </subsection>

      <subsection name="Product Policy">
        <p>By default, the service comes configured to use the <i>example</i> product policy. Other sets of product policy may be defined in the future, but as of this release the only other product policy set is the <i>pds</i> policy that supports the Harvest Tool and Catalog Tool. If this installation is intended to support the Harvest Tool and Catalog Tool, modify the <i>filemgr.properties</i> file in the <i>etc</i> directory as follows:
        </p>

        <source>
# XML repository manager configuration
org.apache.oodt.cas.filemgr.repositorymgr.dirs=file:///[FILEMGR_HOME]/policy/example

# XML validation layer configuration
org.apache.oodt.cas.filemgr.validation.dirs=file:///[FILEMGR_HOME]/policy/example

  should be changed to:

# XML repository manager configuration
org.apache.oodt.cas.filemgr.repositorymgr.dirs=file:///[FILEMGR_HOME]/policy/pds

# XML validation layer configuration
org.apache.oodt.cas.filemgr.validation.dirs=file:///[FILEMGR_HOME]/policy/pds
        </source>

        <p>Information regarding how to modify or add product types to the product policy can be found on the <a href="https://cwiki.apache.org/confluence/display/OODT/Everything+you+want+to+know+about+File+Manger+Policy" target="_blank">Apache OODT Wiki</a>.
        </p>
      </subsection>

      <subsection name="Log Location">
        <p>By default, the location of the log file is defined as a relative reference to the <i>logs</i> directory in the distribution package. This will work just fine as long as the <i>storage-service</i> script is executed directly from the <i>bin</i> directory. If this will not be the case (meaning the script location is set in the user's path and the script is executed from another directory), then the location of the log file must be defined as an absolute reference. In order to change the log file location, modify the <i>logging.properties</i> file in the <i>etc</i> directory as follows:
        </p>

        <source>
java.util.logging.FileHandler.pattern = ../logs/filemgr%g.log

  should be changed to:

java.util.logging.FileHandler.pattern = /&lt;absolute-path&gt;/logs/filemgr%g.log
        </source>

        <p>Replace the <i>&lt;absolute-path&gt;</i> place holder above with the full path to the log file location.
        </p>
      </subsection>
    </section>

    <section name="Configuring the Environment">
      <p>In order to manage and interact with the Storage Service, the local environment must first be configured appropriately. This section describes how to setup the user environment on UNIX-based and Windows machines.
      </p>

      <subsection name="UNIX-Based Environment">
        <p>This section details the environment setup for UNIX-based machines. The binary distribution includes a few shell scripts that must be executed from the command-line. Setting the <i>PATH</i> environment variable to the location of the scripts, enables the shell scripts to be executed from any location on the local machine.
        </p>

        <p>The following command demonstrates how to set the <i>PATH</i> environment variable (in Bourne shell), by appending to its current setting:
        </p>

        <source>
% export PATH=${PATH}:/usr/local/${project.artifactId}-${project.version}/bin
        </source>

        <p>In addition, the shell scripts require that the <i>JAVA_HOME</i> environment variable be set to the appropriate location of the Java installation on the local machine. The following command demonstrates how to set the <i>JAVA_HOME</i> environment variable:
        </p>

        <source>
% export JAVA_HOME=/path/to/java/home
        </source>

        <p>The system administrator for the local machine may need to be consulted for this location. The path specified should have a <i>bin</i> sub-directory that contains the <i>java</i> executable. This variable may also be defined within the scripts. Edit the scripts (files without the .bat extension) and change the line in the example above to represent the local Java installation.
        </p>
      </subsection>
      
      <subsection name="Windows Environment">
        <p>This section details the environment setup for Windows machines. The binary distribution includes a few batch scripts that must be executed from the command-line. Setting the <i>PATH</i> environment variable to the location of the files, enables the batch scripts to be executed from any location on the local machine.
        </p>

        <p>The following command demonstrates how to set the <i>PATH</i> environment variable, by appending to its current setting:
        </p>

        <source>
C:\&gt; set PATH = %PATH%;C:\Program Files\\${project.artifactId}-${project.version}\bin
        </source>

        <p>In addition, the batch scripts require that the <i>JAVA_HOME</i> environment variable be set to the appropriate location of the Java installation on the local machine. The following command demonstrates how to set the <i>JAVA_HOME</i> environment variable:
        </p>

        <source>
C:\&gt; set JAVA_HOME = C:\path\to\java\home
        </source>

        <p>The system administrator for the local machine may need to be consulted for this location. The path specified should have a <i>bin</i> sub-directory that contains the <i>java</i> executable. This variable may also be defined within the scripts. Edit the scripts (files with the .bat extension) and change the line in the example above to represent the local Java installation. Additional methods for setting Windows environment variables can be found in the <a href="index-win.html">Windows System Properties</a> document.
        </p>
      </subsection>

      <subsection name="Installation Location">
        <p>Both the shell and batch scripts for this service utilize system commands for determining the installation home directory that may or may not be available on all platforms. If these commands are not available in the current environment, their use can be replaced in the scripts by setting the <i>FILEMGR_HOME</i> variable with the actual installation path. Modify the UNIX-based shell scripts as follows (the actual installation path may be different in the current environment):
        </p>

        <source>
SCRIPT_DIR=`dirname $0`
FILEMGR_HOME=`cd ${SCRIPT_DIR}/.. &amp;&amp; pwd`

  should be replaced with:

FILEMGR_HOME=/usr/local/${project.artifactId}-${project.version}
        </source>

        <p>Modify the Windows-based batch scripts as follows (the actual installation path may be different in the current environment):
        </p>

        <source>
set SCRIPT_DIR=%~dps0
set FILEMGR_HOME=%SCRIPT_DIR%..

  should be replaced with:

set FILEMGR_HOME=C:\Program Files\\${project.artifactId}-${project.version}
        </source>
      </subsection>
    </section>
  </body>
</document>
