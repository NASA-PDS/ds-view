<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2011-2012, by the California Institute of Technology.
  ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged.
  Any commercial use must be negotiated with the Office of Technology Transfer
  at the California Institute of Technology.

  This software is subject to U. S. export control laws and regulations
  (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the extent that the software
  is subject to U.S. export control laws and regulations, the recipient has
  the responsibility to obtain export licenses or other export authority as
  may be required before exporting such information to foreign countries or
  providing access to foreign nationals.

  $Id$
-->

<document>
  <properties>
    <title>Operation</title>
    <author email="Sean.Hardman@jpl.nasa.gov">Sean Hardman</author>
  </properties>

  <body>
    <section name="Operation">
      <p>This document describes how to operate the Storage Service. The following topics can be found in this document:
      </p>

      <ul>
        <li><a href="#Manage_the_Service">Manage the Service</a></li>
        <li><a href="#Interact_with_the_Service">Interact with the Service</a></li>
      </ul>

      <p>Note: The command-line examples in this document have been broken into multiple lines for readability. The commands should be reassembled into a single line prior to execution.
      </p>
    </section>

    <section name="Manage the Service">
      <p>This section describes how to start and stop the Storage Service. The examples below manage the service via a batch/shell script. The service is started with the following command:
      </p>

      <source>
% storage-service start

Starting the File Manager
OK
...
Oct 20, 2011 ... org.apache.oodt.cas.filemgr.system.XmlRpcFileManager &lt;init&gt;
INFO: File Manager started by user
      </source>

      <p>The following table describes the actions available for the <i>storage-service</i> script:
      </p>

      <table>
        <tr><th>Action</th><th>Description</th></tr>
        <tr><td>start</td><td>Start the service.</td></tr>
        <tr><td>stop</td><td>Stop the service.</td></tr>
        <tr><td>restart</td><td>Stop and then start the service.</td></tr>
        <tr><td>status</td><td>Determine whether the service is running.</td></tr>
      </table>

      <p>When the Storage Service is started for the first time, it creates the <i>logs</i> and <i>run</i> directories under the installation directory to hold the log and pid files, respectively. When the first product is ingested, it creates the <i>catalog</i> directory to hold the Lucene-based catalog. If the product type is defined to move the product to a local repository, then it creates the <i>archive</i> directory to hold this repository.
      </p>
    </section>

    <section name="Interact with the Service">
      <p>This section describes how to ingest products into, query for products from and delete products from the Storage Service. The examples below interact with the service via batch/shell scripts.
      </p>

      <subsection name="Ingest Products">
        <p>This section describes how to ingest a product with the Storage Service and then verify its ingestion via the <i>storage-client</i> script. The following command is an example of ingesting the test file included in the package distribution:
        </p>

        <source>
% storage-client --operation --ingestProduct --productName TransferTest \
  --productStructure Flat --productTypeName TransferProduct \
  --metadataFile "file:///usr/local/${project.artifactId}-${project.version}/test/test.txt.met" \
  --refs "file:///usr/local/${project.artifactId}-${project.version}/test/test.txt"

Oct 20, 2011 ... org.apache.oodt.cas.filemgr.system.XmlRpcFileManagerClient &lt;init&gt;
...
ingestProduct: Result: c76a527b-fb89-11e0-b6e9-4bb4c5e6fa85
        </source>

        <p>The test file above is ingested as product type <i>TransferProduct</i>. This product type assumes the product will be transferred to the Storage Service repository. By default, the transfer occurs using the local data transfer mechanism. If the product resides on a different machine, the remote data transfer mechanism should be utilized. The following command is identical to the above example but overrides the default data transfer mechanism with the <i>RemoteDataTransferFactory</i>:
        </p>

        <source>
% storage-client --operation --ingestProduct --productName TransferTest \
  --productStructure Flat --productTypeName TransferProduct --clientTransfer \
  --dataTransfer org.apache.oodt.cas.filemgr.datatransfer.RemoteDataTransferFactory \
  --metadataFile "file:///usr/local/${project.artifactId}-${project.version}/test/test.txt.met" \
  --refs "file:///usr/local/${project.artifactId}-${project.version}/test/test.txt"
        </source>

        <p>In either case above, the following command verifies the product ingestion:
        </p>

        <source>
% storage-client --operation --hasProduct --productName TransferTest

Oct 20, 2011 ... org.apache.oodt.cas.filemgr.system.XmlRpcFileManagerClient &lt;init&gt;
...
hasProduct: Result: true
        </source>

        <p>The following command is another example of ingesting the test file included in the package distribution, but in this case does not move the product to the repository:
        </p>

        <source>
% storage-client --operation --ingestProduct --productName InPlaceTest \
  --productStructure Flat --productTypeName InPlaceProduct --clientTransfer \
  --dataTransfer org.apache.oodt.cas.filemgr.datatransfer.InPlaceDataTransferFactory \
  --metadataFile "file:///user/local/${project.artifactId}-${project.version}/test/test.txt.met" \
  --refs "file:///usr/local/${project.artifactId}-${project.version}/test/test.txt"

Oct 20, 2011 ... org.apache.oodt.cas.filemgr.system.XmlRpcFileManagerClient &lt;init&gt;
...
ingestProduct: Result: 168442dc-fb8a-11e0-b6e9-4bb4c5e6fa85
        </source>

        <p>The test file above is ingested as product type <i>InPlaceProduct</i>. This product type assumes the product will be ingested in place, meaning it will not be moved. Because of this, the default data transfer mechanism was overridden with the <i>InPlaceDataTransferFactory</i>.
        </p>

        <p>The <i>storage-client</i> script has a number of other options available. Execute the script with the <i>--help</i> option to see what is available. See the <a href="https://cwiki.apache.org/confluence/display/OODT/OODT+Filemgr+User+Guide" target="_blank">Apache OODT Wiki</a> for more details and examples. The <i>storage-client</i> script is equivalent to the <i>filemgr_client</i> script described on the wiki except that the <i>--url</i> option is specified in the <i>storage-client</i> script and is not required to be passed on the command line.
        </p>
      </subsection>

      <subsection name="Query for Products">
        <p>This section describes how to query the Storage Service for products via the <i>storage-query</i> script. The following command queries the service for all ingested products:
        </p>

        <source>
% storage-query --sql -query "SELECT * FROM *"

Oct 20, 2011 ... org.apache.oodt.cas.filemgr.system.XmlRpcFileManager complexQuery
INFO: Query returned 2 results
Flat,Product_Test,/Users/shardman/Desktop/storage-0.1.0-dev/archive/TransferTest,\
TransferTest,2011-10-20T19:09:59.587-07:00,test.txt,text/plain,text,plain,\
c76a527b-fb89-11e0-b6e9-4bb4c5e6fa85,TransferProduct
Flat,Product_Test,/Users/shardman/Desktop/storage-0.1.0-dev/test,\
InPlaceTest,2011-10-20T19:12:12.295-07:00,test.txt,text/plain,text,plain,\
168442dc-fb8a-11e0-b6e9-4bb4c5e6fa85,InPlaceProduct
        </source>

        <p>The results from the above command are little cryptic but serviceable. The following command details specification of the metadata elements to return from the query:
        </p>

        <source>
% storage-query --sql --query "SELECT * FROM *" \
-outputFormat 'ProductId = $CAS.ProductId | ProductName = $CAS.ProductName'

Oct 20, 2011 ... org.apache.oodt.cas.filemgr.system.XmlRpcFileManager complexQuery
INFO: Query returned 2 results
ProductId = c76a527b-fb89-11e0-b6e9-4bb4c5e6fa85 | ProductName = TransferTest
ProductId = 168442dc-fb8a-11e0-b6e9-4bb4c5e6fa85 | ProductName = InPlaceTest
        </source>

        <p>The <i>storage-query</i> script has a number of other options available. Execute the script with the <i>--help</i> option to see what is available. See the <a href="https://cwiki.apache.org/confluence/display/OODT/OODT+Filemgr+User+Guide" target="_blank">Apache OODT Wiki</a> for more details and examples. The <i>storage-query</i> script is equivalent to the <i>query_tool</i> script described on the wiki except that the <i>--url</i> option is specified in the <i>storage-query</i> script and is not required to be passed on the command line.
        </p>

        <p>Note: The query function will throw an exception until the first product is ingested. There is also a bug in the current version of the Apache OODT File Manager that causes the query function to fail unless there is at least one product ingested for each product type.
        </p>
      </subsection>

      <subsection name="Delete Products">
        <p>This section describes how to delete products from the Storage Service via the <i>storage-delete</i> script. The following command deletes a single product from the service:
        </p>

        <source>
% storage-delete --productID c76a527b-fb89-11e0-b6e9-4bb4c5e6fa85

Oct 20, 2011 ... org.apache.oodt.cas.filemgr.tools.DeleteProduct &lt;init&gt;
INFO: Commit enabled.
        </source>

        <p>Multiple products can be deleted in one command by using the <i>storage-query</i> script in conjunction with the <i>storage-delete</i> script. This is accomplished by formulating the query to return a list of product identifiers that are then piped into the delete command. The following would delete all ingested products from the service:
        </p>

        <source>
% storage-query --sql -query "SELECT * FROM *" -outputFormat '$CAS.ProductId' | \
storage-delete --read

Oct 20, 2011 ... org.apache.oodt.cas.filemgr.tools.DeleteProduct &lt;init&gt;
INFO: Commit enabled.
Oct 20, 2011 ... org.apache.oodt.cas.filemgr.system.XmlRpcFileManager complexQuery
INFO: Query returned 2 results
        </source>
      </subsection>
    </section>
  </body>
</document>
