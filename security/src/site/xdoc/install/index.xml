<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2010-2012, by the California Institute of Technology.
  ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged.
  Any commercial use must be negotiated with the Office of Technology Transfer
  at the California Institute of Technology.

  This software is subject to U. S. export control laws and regulations
  (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the extent that the software
  is subject to U.S. export control laws and regulations, the recipient has
  the responsibility to obtain export licenses or other export authority as
  may be required before exporting such information to foreign countries or
  providing access to foreign nationals.

  $Id$
-->

<document>
  <properties>
    <title>Installation</title>
    <author email="Hyun.Lee@jpl.nasa.gov">Hyun Lee</author>
    <author email="Sean.Hardman@jpl.nasa.gov">Sean Hardman</author>
  </properties>

  <body>
    <section name="Installation">
      <p>This document describes how to install the <a href="http://www.opends.org/" target="_blank">OpenDS</a> software package. This package serve as the Security Service for the PDS 2010 system. The following topics can be found in this section:
      </p>

      <ul>
        <li><a href="#System_Requirements">System Requirements</a></li>
        <li><a href="#Software_Installation">Software Installation</a></li>
        <li><a href="#Configuration">Configuration</a></li>
      </ul>
    </section>

    <section name="System Requirements">
      <p>The software that makes up this project consists of the OpenDS open source package that is available for download and installation. This release requires version <i>2.2.0</i> of OpenDS. This package requires Java and a Java Application Server to be installed in the target environment.
      </p>

      <subsection name="Java Runtime Environment">
        <p>The Security Service was developed using Java and will run on any platform with a supported Java Runtime Environment (JRE). The software was specifically compiled for Java version 1.6 and has been tested with this version and version 1.7 and 1.8. Since support for Java 1.6 ended over two years ago, we suggest an environment of at least Java 1.7. The following commands test the local Java installation in a UNIX-based environment:
        </p>

        <source>
% which java
/usr/bin/java

% java -version
java version "1.7.0_72"
Java(TM) SE Runtime Environment (build 1.7.0_72-b14)
Java HotSpot(TM) 64-Bit Server VM (build 24.72-b04, mixed mode)
        </source>

        <p>The first command above checks whether the <i>java</i> executable is in the environment's path and the second command reports the version. If Java is not installed or the version is not at least 1.6, Java will need to be downloaded and installed in the current environment. Consult the local system administrator for installation of this software. For the do-it-yourself crowd, the Java software can be downloaded from the <a href="http://www.oracle.com/technetwork/java/javase/downloads/" target="_blank">Oracle Java Download</a> page. The suggested software package is the Java Standard Edition (SE) 7, either the JDK or the JRE package. The JDK package is not necessary to run the software but could be useful if development and compilation of Java software will also occur in the current environment.
        </p>
      </subsection>

      <subsection name="Java Application Server">
        <p>OpenDS requires a Java application server for hosting the web application. The suggested application server for this release is Apache Tomcat with a minimal version of 6.0.20 through version 7.0.X. Consult the local system administrator for installation of this software. For the do-it-yourself crowd, the Apache Tomcat software can be downloaded from the <a href="http://tomcat.apache.org/" target="_blank">Apache Tomcat</a> page. Choose the version to download (6.0 or 7.0) from the menu on the left.
        </p>
      </subsection>
    </section>

    <section name="Software Installation">
      <subsection name="1. Install Directory Server">
        <p>We are choosing to install a directory server (<a href="http://www.opends.org/" target="_blank">OpenDS</a>), within the application server so that it is accessible from other applications that require a standard LDAP interface.</p>

        <ul>
          <li>Download the package from <a href="http://www.opends.org/promoted-builds/2.2.0/" target="_blank">http://www.opends.org/promoted-builds/2.2.0/</a>. There are a couple of options to choose from including the QuickSetup Installer or just downloading the ZIP package.</li>
          <li>Install the package so that it operates on the standard LDAP port 389. The ZIP package provides installation documentation. Additional documentation is available at <a href="https://docs.opends.org/2.2/page/InstallingTheDs" target="_blank">https://docs.opends.org/2.2/page/InstallingTheDs</a>.</li>
          <li>Startup the server.</li>
        </ul>

        <subsection name="Install OpenDS with QuickSetup">
          <p>Launch QuickSetup Locally.</p>
          <source>% $OPENDS_HOME/setup</source>
          <ul>
            <li>Click <i>Next</i> to install a server.
              <p>
              <center>
                <a href="../images/opends_step1.jpg" target="_blank"><img alt="OpenDS QuickSetup Welcome Screen" src="../images/opends_step1_scale.jpg" border="1"/></a><br/>
                Click on the image for a larger version.
              </center>
              </p>
            </li>
      
            <li>Enter a valid port for LDAP operations. If you run QuickSetup as the root user, port 389 is used as default LDAP port. If you run QuickSetup as a non-root user, port 1389 is used as the default port.
            </li>

            <li>LDAP secure access is disabled by default. If you require secure access, follow the instructions under <a href="#Configure_the_LDAP_server_with_SSL_using_a_self-signed_certificate">Configure the LDAP server with SSL using a self-signed certificate.</a>
              <p>
              <center>
                <a href="../images/opends_step2.jpg" target="_blank"><img alt="OpenDS QuickSetup Server Settings Screen" src="../images/opends_step2_scale.jpg" border="1"/></a><br/>
                Click on the image for a larger version.
              </center>
              </p>
            </li>

            <li>Select <i>This will be a standalone server</i> and click Next.
              <p>
              <center>
                <a href="../images/opends_step3.jpg" target="_blank"><img alt="OpenDS QuickSetup Topology Options Screen" src="../images/opends_step3_scale.jpg" border="1"/></a><br/>
                Click on the image for a larger version.
              </center>
              </p>
            </li>
      
            <li>Enter <i>Directory Base DN:</i> (example: dc=pdsops,dc=jpl,dc=nasa,dc=gov) and click Next.
              <p>
              <center>
                <a href="../images/opends_step4.jpg" target="_blank"><img alt="OpenDS QuickSetup Data Options Screen" src="../images/opends_step4_scale.jpg" border="1"/></a><br/>
                Click on the image for a larger version.
              </center>
              </p>
            </li>

            <li>This panel enables you to review your configuration settings and make any necessary adjustments.
            </li>

            <li>Click <i>Finish</i> to complete the configuration after verifying your configuration settings.
              <p>
              <center>
                <a href="../images/opends_step5.jpg" target="_blank"><img alt="OpenDS QuickSetup Review Screen" src="../images/opends_step5_scale.jpg" border="1"/></a><br/>
                Click on the image for a larger version.
              </center>
              </p>
            </li>

            <li>When the installation is complete, a status message is displayed indicating success or failure.
            </li>

            <li>To view the status of the server, click the <i>Launch Control Panel</i> button.
              <p>
              <center>
                <a href="../images/opends_step6.jpg" target="_blank"><img alt="OpenDS QuickSetup Progress Screen when Done" src="../images/opends_step6_scale.jpg" border="1"/></a><br/>
                Click on the image for a larger version.
              </center>
              </p>
            </li>
          </ul>
        </subsection>

        <subsection name="Configure the LDAP server with SSL using a self-signed certificate">
          <p>Assume that you are running following commands under <i>$OPENDS_HOME/config</i> directory.</p>
          <ol>
            <li>Create a private key for the certificate
            <source>
% /usr/java/jdk/bin/keytool -genkey -alias server-cert -keyalg rsa \
-dname "CN=pdsops.jpl.nasa.gov,O=JPL,C=US" -keystore keystore -storetype JKS
            </source>
            </li>
            <li>Generate a self-signed certificate for the key with the command:
              <source>
% /usr/java/jdk/bin/keytool -selfcert -alias server-cert -validity 1825 \
-keystore keystore -storetype JKS
              </source>
              <p>When you are prompted for the keystore password, enter the same password that you provided in Step 1.
              </p><br/><br/>
            </li>
            <li>Create a text file named <i>keystore.pin</i>.<br/>
            <p>The file should contain the password that you chose to protect the contents of the keystore.</p><br/><br/>
            </li>
            <li>Export the public key for the certificate.
              <source>
% /usr/java/jdk/bin/keytool -export -alias server-cert -file server-cert.txt -rfc \
-keystore keystore -storetype JKS
              </source>
            </li>
            <li>Create a new trust store and import the server certificate into it.
              <source>
% /usr/java/jdk/bin/keytool -import -alias server-cert -file server-cert.txt \
-keystore truststore -storetype JKS
              </source>
              <p>Type <code class="codespan">yes</code> when you are prompted about whether you want to trust the certificate.
              </p><br/><br/>
            </li>   
            <li>Use the <code class="codespan">dsconfig</code> command to enable the key manager provider, trust manager provider, and connection handler.
              <source>
% $OPENDS_HOME/bin/dsconfig -h pdsops.jpl.nasa.gov -p 4444 \
-D "cn=Directory Manager" -w password -X -n set-key-manager-provider-prop \
--provider-name JKS --set enabled:true

% $OPENDS_HOME/bin/dsconfig -h pdsops.jpl.nasa.gov -p 4444 \
-D "cn=Directory Manager" -w password -X -n set-trust-manager-provider-prop \
--provider-name "Blind Trust" --set enabled:true

% $OPENDS_HOME/bin/dsconfig -h pdsops.jpl.nasa.gov -p 4444 \
-D "cn=Directory Manager" -w password -X -n set-connection-handler-prop \
--handler-name "LDAPS Connection Handler" \
--set "trust-manager-provider:Blind Trust" --set key-manager-provider:JKS \
--set listen-port:636 --set enabled:true
              </source>
              <p>Port <code class="codespan">636</code> is the standard LDAPS port, but you might not be able to use it if it is already taken or you are a regular user. If you need to use other port than <code class="codespan">636</code>, then change the <code class="codespan">listen-port</code> property in the last command to the number being used.
              </p><br/><br/>
            </li>
            <li>Test the LDAPS connection with the <code class="codespan">ldapsearch</code> command.
              <source>
% $OPENDS_HOME/bin/ldapsearch --port 636 --useSSL --baseDN "" \
--searchScope base "(objectClass=*)"
              </source>
              <p>Type <code class="codespan">yes</code> when you are prompted about whether you want to trust the server's certificate.
              </p>
            </li>
          </ol>
        </subsection>
      </subsection>

      <subsection name="2. Install Application Server">
        <p>Although other application servers are supported (e.g., GlassFish), <a href="http://tomcat.apache.org/" target="_blank">Apache Tomcat</a> is the preferred application server.
        </p>

        <ul>
          <li>Download the appropriate binary package for your platform from <a href="http://tomcat.apache.org/download-60.cgi" target="_blank">http://tomcat.apache.org/download-60.cgi</a>.</li>
          <li>Install the package so that it operates on port 80. Documentation can be found in the binary distributions and at <a href="http://tomcat.apache.org/tomcat-6.0-doc/" target="_blank">http://tomcat.apache.org/tomcat-6.0-doc/</a>.<br/>
            <p>Modify the <i>$CATALINA_HOME/bin/catalina.sh</i> file as follows:
            </p>
            <source>
CATALINA_OPTS="-Xms256m -Xmx1024m"
JAVA_OPTS="-Xmx1024m -XX:MaxPermSize=256m"
            </source>
          </li>
          <li>Startup the server.</li>
        </ul>
      </subsection>
    </section>

    <section name="Configuration">
      <p>This section details the Directory Sever, the Tomcat Server, and the Tomcat Application configuration.
      </p>

      <subsection name="Directory Server Configuration">
        <p>With the software configuration complete, it is time to add groups and users to the directory server. The following configuration files, in the LDAP Data Interchange Format (LDIF), are available for configuring the directory server:
        </p>

        <ul>
          <li><a href="../docs/pdspers_schema.ldif" target="_blank">pdspers_schema.ldif</a><br/>
            This configuration file specifies the schema for the directory server.
            <p/>
          </li>
          <li><a href="../docs/pds_groups.ldif" target="_blank">pds_groups.ldif</a><br/>
            This configuration file specifies the PDS group entries for the directory server.
            <p/>
          </li>
          <li><a href="../docs/pdsops_pers.ldif" target="_blank">pdsops_pers.ldif</a><br/>
            This configuration file specifies PDS person entries for the directory server. The actual PDS person entries have been removed from this example configuration file since it contains clear text passwords. This file contains an example person entry for the <i>pdsmc</i> account.
          </li>
        </ul>

        <p>Execute the commands with the configuration files as follows:
        </p>

        <source>
% $OPEN_DS/bin/ldapmodify -p 389 -h pdsops.jpl.nasa.gov -D "cn=Directory Manager" \
-w &lt;password&gt; -c -a -f pdspers_schema.ldif

% $OPEN_DS/bin/ldapmodify -p 389 -h pdsops.jpl.nasa.gov -D "cn=Directory Manager" \
-w &lt;password&gt; -c -a -f pds_groups.ldif

% $OPEN_DS/bin/ldapmodify -p 389 -h pdsops.jpl.nasa.gov -D "cn=Directory Manager" \
-w &lt;password&gt; -c -a -f pdsops_pers.ldif
        </source>
      </subsection>

      <subsection name="Tomcat Server Configuration">
        <p>Type following command to generate a self-signed server certificate:
        </p>

        <source>
% $JAVA_HOME/bin/keytool -genkey -alias virtualhostname -keyalg RSA \
-keystore /usr/local/tomcat7/.keystore
        </source> 

        <p>The password you enter in the first password prompt will be the password for the keystore where your server certificate is stored. For the operational system, you may need to purchase a Certificate from a well-known <i>Certificate Authority(CA)</i> such as VeriSign or Thawte.
        </p>
        
        <p>After generating the server certificate, edit the Tomcat's server configuration file (<code class="codespan">$CATALINA_HOME/conf/server.xml</code>) to have Tomcat server listening on the port 8080. The <code class="codespan">redirectPort</code> option is the port that will be used when redirecting from <i>http</i> to <i>https</i>.
        </p> 

        <source>
&lt;Connector port="8080" protocol="HTTP/1.1" 
           connectionTimeout="20000" 
           redirectPort="8443" /&gt;
        </source> 
 
        <p>To make Tomcat listen on the port 8443, with an SSL transport, the following needs to be configured in the <code class="codespan">server.xml</code> file.
        </p> 
 
        <source>
&lt;Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"
          maxThreads="150" scheme="https" secure="true"
          clientAuth="false" sslProtocol="TLS" 
          keystoreFile="/usr/local/tomcat7/.keystore"
          keystorePass="password"/&gt;
        </source> 

        <p>Add an OpenDS realm to the Tomcat Server to authenticate the users with the Directory Server.
        </p>

        <source>
&lt;Realm className="org.apache.catalina.realm.JNDIRealm" debug="99"
        connectionName="cn=Directory Manager"
        connectionPassword="password"
        connectionURL="ldap://pdsdev.jpl.nasa.gov:389"
        userPattern="uid={0},ou=people,dc=pdsdev,dc=jpl,dc=nasa,dc=gov"
        roleBase="ou=groups,dc=pdsdev,dc=jpl,dc=nasa,dc=gov"
        roleName="cn"
        roleSearch="(uniqueMember={0})"/&gt;
        </source>

        <p>To enable Single Sign On feature of the Tomcat server, make sure following element is not commented out.
        </p>

        <source>
&lt;Valve class="org.apache.catalina.authenticator.SingleSignOn"/&gt;
        </source>
      </subsection>
      
      <subsection name="Tomcat Application Server Configuration">
        <p>Add the security-constraint, role, and login-config elements to your application's <i>web.xml</i> file as shown below.
        </p>

        <source>    
&lt;security-constraint&gt;
  &lt;web-resource-collection&gt;
    &lt;web-resource-name&gt;registry&lt;/web-resource-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;http-method&gt;DELETE&lt;/http-method&gt;
    &lt;http-method&gt;POST&lt;/http-method&gt;
    &lt;http-method&gt;PUT&lt;/http-method&gt;
  &lt;/web-resource-collection&gt;
  &lt;auth-constraint&gt;
    &lt;role-name&gt;PDS_Affiliate&lt;/role-name&gt;
  &lt;/auth-constraint&gt;
&lt;/security-constraint&gt;

&lt;login-config&gt;
   &lt;auth-method&gt;BASIC&lt;/auth-method&gt;
   &lt;realm-name&gt;OpenDS&lt;/realm-name&gt;
&lt;/login-config&gt;      
        </source>

        <p>Add the following in the your application's web.xml (<code class="codespan">$CATALINA_HOME/webapps/yourapplication/WEB-INF/web.xml</code>) in the <code class="codespan">&lt;security-constraint&gt;</code> tag:
        </p> 

        <source>
&lt;user-data-constraint&gt;
   &lt;transport-guarantee&gt;CONFIDENTIAL&lt;/transport-guarantee&gt;
&lt;/user-data-constraint&gt;
        </source> 

        <p>This forces a switch from <i>http</i> to <i>https</i>, using the secure protocol. With this configuration, you can create a Tomcat application that will automatically be secured if accessing it at:
        </p>

        <p><code class="codespan">http://localhost:8080/registry/extrinsics</code>
        </p>

        <p>You will be automatically redirected to:
        </p>

        <p><code class="codespan">https://localhost:8443/registry/extrinsics</code>
        </p>
      </subsection>
    </section>
  </body>
</document>
