<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2010-2011, by the California Institute of Technology.
  ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged.
  Any commercial use must be negotiated with the Office of Technology Transfer
  at the California Institute of Technology.

  This software is subject to U. S. export control laws and regulations
  (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the extent that the software
  is subject to U.S. export control laws and regulations, the recipient has
  the responsibility to obtain export licenses or other export authority as
  may be required before exporting such information to foreign countries or
  providing access to foreign nationals.

  $Id$
-->

<document>
  <properties>
    <title>Installation</title>
    <author email="Hyun.Lee@jpl.nasa.gov">Hyun Lee</author>
    <author email="Sean.Hardman@jpl.nasa.gov">Sean Hardman</author>
  </properties>

  <body>
    <section name="Installation">
      <p>This section describes how to install the <a href="http://www.opends.org/" target="_blank">OpenDS</a> software package. This package serve as the Security Service for the PDS 2010 system. The following topics can be found in this section:
      </p>

      <ul>
        <li><a href="#System_Requirements">System Requirements</a></li>
        <li><a href="#Software_Installation">Software Installation</a></li>
        <li><a href="#Configuration">Configuration</a></li>
      </ul>
    </section>

    <section name="System Requirements">
      <p>The software that makes up this project consists of an open source package that is available for download and installation. The package and its release version is as follows:
      </p>

      <ul>
        <li>OpenDS 2.2.0</li>
      </ul>

      <p>The above software package requires the following software to be installed in the target environment:
      </p>

      <ul>
        <li>Sun Java Standard Edition (J2SE) 1.6.X</li>
        <li>Apache Tomcat 7.0.4</li>
      </ul>
    </section>

    <section name="Software Installation">

      <subsection name="1. Install Directory Server">
        <p>We are choosing to install a directory server (<a href="http://www.opends.org/" target="_blank">OpenDS</a>), within the application server so that it is accessible from other applications that require a standard LDAP interface.</p>

        <ul>
          <li>Download the package from <a href="http://www.opends.org/promoted-builds/2.2.0/" target="_blank">http://www.opends.org/promoted-builds/2.2.0/</a>. There are a couple of options to choose from including the QuickSetup Installer or just downloading the ZIP package.</li>
          <li>Install the package so that it operates on the standard LDAP port 389. The ZIP package provides installation documentation. Additional documentation is available at <a href="https://docs.opends.org/2.2/page/InstallingTheDs" target="_blank">https://docs.opends.org/2.2/page/InstallingTheDs</a>.</li>
          <li>Startup the server.</li>
        </ul>

        <subsection name="Configure the LDAP server with SSL using a self-signed certificate">

        <ol>
          <li>Create a private key for the certificate
          <source>
% /usr/java/jdk/bin/keytool -genkey -alias server-cert -keyalg rsa \
 -dname "CN=pdsops.jpl.nasa.gov,O=JPL,C=US" -keystore keystore -storetype JKS         
          </source>
          </li>
          <li>Generate a self-signed certificate for the key with the command:
            <source>
% /usr/java/jdk/bin/keytool -selfcert -alias server-cert -validity 1825 \
-keystore keystore -storetype JKS             
            </source>
            <p>When you are prompted for the keystore password, enter the same password that you provided in Step 1.
            </p>
          </li>
          <li>Export the public key for the certificate.
            <source>
% /usr/java/jdk/bin/keytool -export -alias server-cert -file server-cert.txt -rfc \
-keystore keystore -storetype JKS
            </source>
          </li>
          <li>Create a new trust store and import the server certificate into it.
            <source>
% /usr/java/jdk/bin/keytool -import -alias server-cert -file server-cert.txt \
-keystore truststore -storetype JKS
            </source>
            <p>Type <code class="codespan">yes</code> when you are prompted about whether you want to trust the certificate.
            </p>
          </li>   
          <li>Use the <code class="codespan">dsconfig</code> command to enable the key manager provider, trust manager provider, and connection handler.
            <source>
% dsconfig -h pdsops.jpl.nasa.gov -p 4444 -D "cn=Directory Manager" -w password \
 -X -n set-key-manager-provider-prop --provider-name JKS --set enabled:true

% dsconfig -h pdsops.jpl.nasa.gov -p 4444 -D "cn=Directory Manager" -w password \
-X -n set-trust-manager-provider-prop --provider-name "Blind Trust" --set enabled:true

% dsconfig -h pdsops.jpl.nasa.gov -p 4444 -D "cn=Directory Manager" -w password \
-X -n set-connection-handler-prop --handler-name "LDAPS Connection Handler" \
--set "trust-manager-provider:Blind Trust" --set key-manager-provider:JKS \
--set listen-port:636 --set enabled:true
            </source>
            <p>Port <code class="codespan">636</code> is the standard LDAPS port, but you might not be able to use it if it is already taken or you are a regular user. If you need to use other port than <code class="codespan">636</code>, then change the <code class="codespan">listen-port</code> property in the last command to the number being used.
            </p> 
          </li>
          <li>Test the LDAPS connection with the <code class="codespan">ldapsearch</code> command.
            <source>
% $OPENDS_HOME/bin/ldapsearch --port 636 --useSSL --baseDN "" \
--searchScope base "(objectClass=*)"
            </source>
            <p>Type <code class="codespan">yes</code> when you are prompted about whether you want to trust the server's certificate.
            </p>
          </li>
        </ol>

        </subsection>
      </subsection>

      <subsection name="2. Install Application Server">
        <p>Although other application servers are supported (e.g., GlassFish), <a href="http://tomcat.apache.org/" target="_blank">Apache Tomcat</a> is the preferred application server.
        </p>

        <ul>
          <li>Download the appropriate binary package for your platform from <a href="http://tomcat.apache.org/download-70.cgi" target="_blank">http://tomcat.apache.org/download-70.cgi</a>.</li>
          <li>Install the package so that it operates on port 80. Documentation can be found in the binary distributions and at <a href="http://tomcat.apache.org/tomcat-7.0-doc/" target="_blank">http://tomcat.apache.org/tomcat-7.0-doc/</a>.<br/>
            <p>Modify the <i>$CATALINA_HOME/bin/catalina.sh</i> file as follows:
            </p>
            <source>
CATALINA_OPTS="-Xms256m -Xmx1024m"
JAVA_OPTS="-Xmx1024m -XX:MaxPermSize=256m"
            </source>
          </li>
          <li>Startup the server.</li>
        </ul>
      </subsection>
    </section>

    <section name="Configuration">
      <p>This section details the Directory Sever, the Tomcat Server, and the Tomcat Application configuration.
      </p>

    <subsection name="Directory Server Configuration">
        <p>With the software configuration complete, it is time to add groups and users to the directory server. Execute the commands as follows:
        </p>

        <source>
% $OPEN_DS/bin/ldapmodify -p 389 -h pdsops.jpl.nasa.gov -D "cn=Directory Manager" \
-w &lt;password&gt; -c -a -f pdspers_schema.ldif

% $OPEN_DS/bin/ldapmodify -p 389 -h pdsops.jpl.nasa.gov -D "cn=Directory Manager" \
-w &lt;password&gt; -c -a -f pds_groups.ldif

% $OPEN_DS/bin/ldapmodify -p 389 -h pdsops.jpl.nasa.gov -D "cn=Directory Manager" \
-w &lt;password&gt; -c -a -f pdsops_pers.ldif
        </source>
      </subsection>

      <subsection name="Tomcat Server Configuration">   
        <p>Type following command to generate a self-signed server certificate:
        </p>

        <source>
% $JAVA_HOME/bin/keytool -genkey -alias virtualhostname -keyalg RSA \
-keystore /usr/local/tomcat7/.keystore
        </source> 

        <p>The password you enter in the first password prompt will be the password for the keystore where your server certificate is stored. For the operational system, you may need to purchase a Certificate from a well-known <i>Certificate Authority(CA)</i> such as VeriSign or Thawte.
        </p>
        
        <p>After generating the server certificate, edit the Tomcat's server configuration file (<code class="codespan">$CATALINA_HOME/conf/server.xml</code>) to have Tomcat server listening on the port 8080. The <code class="codespan">redirectPort</code> option is the port that will be used when redirecting from <i>http</i> to <i>https</i>.
        </p> 

        <source>
&lt;Connector port="8080" protocol="HTTP/1.1" 
           connectionTimeout="20000" 
           redirectPort="8443" /&gt;
        </source> 
 
        <p>To make Tomcat listen on the port 8443, with an SSL transport, the following needs to be configured in the <code class="codespan">server.xml</code> file.
        </p> 
 
        <source>
&lt;Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"
          maxThreads="150" scheme="https" secure="true"
          clientAuth="false" sslProtocol="TLS" 
          keystoreFile="/usr/local/tomcat7/.keystore"
          keystorePass="password"/&gt;
        </source> 

        <p>Add an OpenDS realm to the Tomcat Server to authenticate the users with the Directory Server.
        </p>

        <source>
&lt;Realm className="org.apache.catalina.realm.JNDIRealm" debug="99"
        connectionName="cn=Directory Manager"
        connectionPassword="password"
        connectionURL="ldap://pdsdev.jpl.nasa.gov:389"
        userPattern="uid={0},ou=people,dc=pdsdev,dc=jpl,dc=nasa,dc=gov"
        roleBase="ou=groups,dc=pdsdev,dc=jpl,dc=nasa,dc=gov"
        roleName="cn"
        roleSearch="(uniqueMember={0})"/&gt;
        </source>

        <p>To enable Single Sign On feature of the Tomcat server, make sure following element is not commented out.
        </p>

        <source>
&lt;Valve class="org.apache.catalina.authenticator.SingleSignOn"/&gt;
        </source>
      </subsection>
      
      <subsection name="Tomcat Application Configuration">
        <p>Add the security-constraint, role, and login-config elements to your application's <i>web.xml</i> file as shown below.
        </p>

        <source>    
&lt;security-constraint&gt;
  &lt;web-resource-collection&gt;
    &lt;web-resource-name&gt;registry-service&lt;/web-resource-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;http-method&gt;DELETE&lt;/http-method&gt;
    &lt;http-method&gt;POST&lt;/http-method&gt;
    &lt;http-method&gt;PUT&lt;/http-method&gt;
  &lt;/web-resource-collection&gt;
  &lt;auth-constraint&gt;
    &lt;role-name&gt;PDS_Affiliate&lt;/role-name&gt;
  &lt;/auth-constraint&gt;
&lt;/security-constraint&gt;

&lt;login-config&gt;
   &lt;auth-method&gt;BASIC&lt;/auth-method&gt;
   &lt;realm-name&gt;OpenDS&lt;/realm-name&gt;
&lt;/login-config&gt;      
        </source>

        <p>Add the following in the your application's web.xml (<code class="codespan">$CATALINA_HOME/webapps/yourapplication/WEB-INF/web.xml</code>) in the <code class="codespan">&lt;security-constraint&gt;</code> tag:
        </p> 

        <source>
&lt;user-data-constraint&gt;
   &lt;transport-guarantee&gt;CONFIDENTIAL&lt;/transport-guarantee&gt;
&lt;/user-data-constraint&gt;
        </source> 

        <p>This forces a switch from <i>http</i> to <i>https</i>, using the secure protocol. With this configuration, you can create a Tomcat application that will automatically be secured if accessing it at:
        </p>

        <p><code class="codespan">http://localhost:8080/registry-service/registry/extrinsics</code>
        </p>

        <p>You will be automatically redirected to:
        </p>

        <p><code class="codespan">https://localhost:8443/registry-service/registry/extrinsics</code>
        </p>
      </subsection>
    </section>
  </body>
</document>
